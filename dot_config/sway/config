# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
# exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
exec_always "systemctl --user import-environment; systemctl --user start sway-session.target"
# exec_always setwallpaper $(curl -s https://bing.biturl.top | jq -r ".url")
exec_always bash -c "pkill nm-applet; nm-applet --indicator"
# exec_always bash -c "pkill blueman-applet; blueman-applet"
exec_always bash -c "pkill gammastep; gammastep-indicator"
# exec_always autotiling
exec_always ~/.config/sway/scripts/autotiling

exec_always bash -c "pkill kanshi; kanshi"
set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec_always rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob




# include ~/.config/sway/outputs
include ~/.config/sway/workspaces

# exec mylock safe

# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

#Scripts

# set $scripts

set $screenshot /home/ewan/.local/bin/snag

set $snag_rofi /home/ewan/.local/bin/snag -R

set $volume ~/.config/sway/scripts/volume.sh
set $brightness ~/.config/sway/scripts/brightness.sh
# set $lock ~/.config/sway/scripts/lock.sh
set $lock exec gtklock -m ~/source-code/Github/gtklock-playerctl-module/playerctl-module.so -s ~/.config/gtklock/style.css
# Your preferred terminal emulator
set $term kitty
# set $term alacritty
set $browser firefox
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | rofi -show drun | xargs swaymsg exec --

# exec_always gammastep
# exec ~/.config/sway/scripts/night-mode.sh
# exec mako

# exec dunst



### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * {
  bg ~/Downloads/al-elmes-0QkvhDpwySg-unsplash.jpg fill
}
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 $lock \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep $lock

focus_on_window_activation focus
for_window [app_id="firefox"] inhibit_idle fullscreen
for_window [app_id="org.jellyfin.jellyfinmediaplayer"] inhibit_idle fullscreen
for_window [app_id="flameshot"] border pixel 0, floating enable, fullscreen disable, move absolute position 0 0
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Window config

gaps inner 9 
default_border none
default_floating_border pixel 8
hide_edge_borders smart
# smart_gaps on

# display_border none
# Window borders
# default_border pixel 1
# default_floating_border normal
# hide_edge_borders smart

# Brightness Control

# bindsym --locked XF86MonBrightnessDown exec $brightness down
# bindsym --locked XF86MonBrightnessUp exec $brightness up 


# Inputs

# input * { 
#   xkb_layout "be"
#   # xkb_variant "wang"
# }

input "type:keyboard" {
    xkb_layout be 
    xkb_variant ,nodeadkeys
    xkb_options grp:alt_shift_toggle
}

focus_follows_mouse no

input "1739:52632:MSFT0004:00_06CB:CD98_Touchpad" {
    tap enabled
    dwt enabled
  }

### Key bindings
#
# Basics:
#
    bindsym $mod+p exec --no-startup-id ~/.config/rofi/launchers/type-2/launcher.sh
    bindsym $mod+x exec --no-startup-id ~/.config/rofi/powermenu/type-2/powermenu.sh 
    # Start a terminal
    bindsym $mod+Return exec $term

    bindsym $mod+Shift+b exec ~/.scripts/wofi-scripts/Bluetooth.sh

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+space exec ulauncher-toggle
    # bindsym $mod+d exec $menu
    # bindsym $mod+space exec --no-startup-id ~/.config/rofi/launchers/type-1/launcher.sh

    bindsym $mod+Escape exec $lock
    # bindsym  $mod+Escape                exec mylock  
    # bindsym  Shift+$mod+Escape          exec mylock at-home-mode

    bindsym $mod+Shift+s exec flameshot gui

    bindsym $mod+Shift+r exec $snag_rofi

    # bindsym $mod+Shift+w $browser
    bindsym $mod+Shift+w exec /home/ewan/source-code/Github/rofi-wifi-menu/rofi-wifi-menu.sh

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Move through worksapces

    bindsym $mod+Mod1+$left workspace prev
    bindsym $mod+Mod1+$right workspace next 


    bindsym $mod+Mod1+Left workspace prev
    bindsym $mod+Mod1+Right workspace next 

    # Switch to workspace
    bindsym $mod+ampersand workspace number 1
    bindsym $mod+eacute workspace number 2
    bindsym $mod+quotedbl workspace number 3
    bindsym $mod+apostrophe workspace number 4
    bindsym $mod+parenleft workspace number 5
    bindsym $mod+section workspace number 6
    bindsym $mod+egrave workspace number 7
    bindsym $mod+exclam workspace number 8
    bindsym $mod+ccedilla workspace number 9
    bindsym $mod+agrave workspace number 10
    

    bindsym $mod+Shift+Mod1+$left move container workspace prev
    bindsym $mod+Shift+Mod1+$right move container workspace next 

    bindsym $mod+Shift+Mod1+Left move container workspace prev
    bindsym $mod+Shift+Mod1+Right move container workspace next 


    bindsym $mod+Shift+ampersand move container to workspace number 1
    bindsym $mod+Shift+eacute move container to workspace number 2
    bindsym $mod+Shift+quotedbl move container to workspace number 3
    bindsym $mod+Shift+apostrophe move container to workspace number 4
    bindsym $mod+Shift+parenleft move container to workspace number 5
    bindsym $mod+Shift+section move container to workspace number 6	
    bindsym $mod+Shift+egrave move container to workspace number 7
    bindsym $mod+Shift+exclam move container to workspace number 8
    bindsym $mod+Shift+ccedilla move container to workspace number 9
    bindsym $mod+Shift+agrave move container to workspace number 10
    # Move focused container to workspace
    # bindsym $mod+Shift+1 move container to workspace number 1
    # bindsym $mod+Shift+2 move container to workspace number 2
    # bindsym $mod+Shift+3 move container to workspace number 3
    # bindsym $mod+Shift+4 move container to workspace number 4
    # bindsym $mod+Shift+5 move container to workspace number 5
    # bindsym $mod+Shift+6 move container to workspace number 6
    # bindsym $mod+Shift+7 move container to workspace number 7
    # bindsym $mod+Shift+8 move container to workspace number 8
    # bindsym $mod+Shift+9 move container to workspace number 9
    # bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Set volume via Pipewire - pw-volume 

# bindsym --locked XF86AudioRaiseVolume exec $volume up
# bindsym --locked XF86AudioLowerVolume exec $volume down
# bindsym --locked XF86AudioMute exec $volume mute

include ~/.config/sway/config.d/wob

# bindsym --locked XF86AudioRaiseVolume exec "pw-volume change +4%; pkill -RTMIN+8 waybar; notify-send 'Volume: ' -h int:value:(pw-volume status | jq '.percentage')"
# bindsym --locked XF86AudioLowerVolume exec "pw-volume change -4%; pkill -RTMIN+8 waybar; notify-send 'Volume: ' -h int:value:(pw-volume status | jq '.percentage')"
# bindsym --locked XF86AudioMute exec "pw-volume mute toggle; pkill -RTMIN+8 waybar; notify-send 'Volume: ' -h int:value:(pw-volume status | jq '.percentage')"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*
